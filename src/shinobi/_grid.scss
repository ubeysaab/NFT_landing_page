@use "breakpoints";

@use "sass:math";
// 12 popular number in grid systems
$grid-columns:12;

// base layout classes
.container {
  // content container which is basically brings our content into the central column in the page and give it max width

  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
  box-sizing: border-box;

}


.row{
  // for the row of grid elements so if we use column classes is gonna be inside a row 
  display: flex; // so every column inside the row is gonna be flex item

  flex-flow: row wrap; // that's mean if we have a lot of different elements in a single row  it gonna wrap elements into the next row down where there's no enough room 

}


// col is gonna use to distripute content in a row 
@include breakpoints.xs {
  @for $i from 1 through $grid-columns {
    .col-xs-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include breakpoints.sm {
  @for $i from 1 through $grid-columns {
    .col-sm-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include breakpoints.md {
  @for $i from 1 through $grid-columns {
    .col-md-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include breakpoints.lg {
  @for $i from 1 through $grid-columns {
    .col-lg-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include breakpoints.xl {
  @for $i from 1 through $grid-columns {
    .col-xl-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}



