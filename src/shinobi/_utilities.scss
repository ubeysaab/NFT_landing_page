@use "sass:map";
@use "variables";


@use "sass:math";
// we gonna create some thing like m-4 for pl 


$utilities:(
  // padding here is a inner map 
  "padding":(
    "prefix":"p",
    "values":(
      "0":0,
      "1":variables.$base-padding,
      "2":variables.$base-padding * 2,
      "3":variables.$base-padding * 3,
      "4":variables.$base-padding * 4,
    )
  ),
  "margin-left":(
    "prefix":"ml",
    "values":(
      "0":0,
      "1":variables.$base-padding,
      "2":variables.$base-padding * 2,
      "3":variables.$base-padding * 3,
      "4":variables.$base-padding * 4,
    )
  ),
  "margin-top":(
    "prefix":"mt",
    "values":(
      "0":0,
      "1":variables.$base-padding,
      "2":variables.$base-padding * 2,
      "3":variables.$base-padding * 3,
      "4":variables.$base-padding * 4,
      "5":variables.$base-padding * 5,
    )
  ),
  "margin-bottom":(
    "prefix":"mb",
    "values":(
      "0":0,
      "1":variables.$base-padding,
      "2":variables.$base-padding * 2,
      "3":variables.$base-padding * 3,
      "4":variables.$base-padding * 4,
      "5":variables.$base-padding * 5,
    )
  ),
  "border-radius":(
    "prefix":"br",
    "values":(
      "default":variables.$base-border-radius,
      "nn":0,
      "xs":math.div(variables.$base-border-radius,4),
      "sm":math.div(variables.$base-border-radius,2),
      "lg":variables.$base-border-radius * 2,
      "circle":50%
    )
  ),
  "font-size":(
    "prefix":"fs",
    "values":(
      'sm' : variables.$font-size-s,
      'md' : variables.$base-font-size,
      'lg' : variables.$font-size-l,
      'xl' : variables.$font-size-xl,
      'xxl' : variables.$font-size-xxl,
    )
  ),
  "display":(
    "prefix":"display",
    "values":(
      "nn":none,
      "bl":block,
      "in-bl":inline-block,
      "fl":flex,
    )
  ),
  "justify-content": (
    "prefix": "justify",
    "values": (
      "start": flex-start,
      "end": flex-end,
      "center": center,
      "between": space-between,
      "around": space-around,
      "evenly": space-evenly,
    )
  ),
  "gap":(
    "prefix":"gap",
    "values":(
      "0":0,
      "1":variables.$base-padding,
      "2":variables.$base-padding * 2,
      "3":variables.$base-padding * 3,
      "4":variables.$base-padding * 4,
      "5":variables.$base-padding * 5,
    )

  ),
  "color":(
    "prefix":"text",
    "values":(
      "primary":variables.$primary ,
    )

  )
);



@each $property,$mapOfProperty in $utilities {
  $prefix :map.get( $mapOfProperty, $key:"prefix" );
  $valuesInsideTheMapOfProperty : map.get( $mapOfProperty, $key:"values" );
  @each $key,$value in $valuesInsideTheMapOfProperty{


    @if($key == "default"){
      .#{$prefix}{
        #{$property} : $value;
      }

    }@else{

      .#{$prefix}-#{$key}{
        #{$property}: $value;
      }
    }
  }
}